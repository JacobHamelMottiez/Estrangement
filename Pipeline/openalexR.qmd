---
title: "openalexR"
date: 2025-04-28
author:
  - name: Jacob Hamel-Mottiez
    id: jc
    orcid: 0009-0007-3666-908X
    email: jacob.hamel-mottiez.1@ulaval.ca
    affiliation: 
      - name: Laval University

brand:
  light: C:/Users/jacob/OneDrive - Université Laval/quarto-light-dark-experiments/united-brand.yml
  dark: C:/Users/jacob/OneDrive - Université Laval/quarto-light-dark-experiments/slate-brand.yml
format:
  html:
    toc: true
    code-fold: true

execute: 
  echo: false
  warning: false
  enabled: true # This is so that Plotly is rendered. 

keywords:
  - openalex
  - R
  - Philosophy of Biology
---

```{r}
library(plotly)
library(gt)
```


```{r}
#| echo: false
#| warning: false
library(plotly)

plotly_brand <- function(brand_yml, title, x, y) {
  brand <- yaml::yaml.load_file(brand_yml)
  return (
    function(plot)
      plot |> layout(
        paper_bgcolor = brand$color$background,
        plot_bgcolor = brand$color$background,
        title = list(font = list(
          color = brand$color$foreground, size = 20
        )),
        # Plot title font
        xaxis = list(
          titlefont = list(color = brand$color$foreground, size = 16),
          # x-axis title font
          tickfont = list(color = brand$color$foreground, size = 14)      # x-axis tick font
        ),
        yaxis = list(
          titlefont = list(color = brand$color$foreground, size = 16),
          # y-axis title font
          tickfont = list(color = brand$color$foreground, size = 14)      # y-axis tick font
        )
      )
  )
}
      
      

united_theme <- plotly_brand('C:/Users/jacob/OneDrive - Université Laval/quarto-light-dark-experiments/united-brand.yml')
slate_theme <- plotly_brand('C:/Users/jacob/OneDrive - Université Laval/quarto-light-dark-experiments/slate-brand.yml')


```

```{r}
ggplot_theme_colors <- function(bgcolor, fgcolor) {
  theme_minimal(base_size = 11) %+%
    theme(
      panel.border = element_blank(),
      panel.grid.major.y = element_line(colour = fgcolor),
      panel.grid.minor.y = element_line(colour = fgcolor),
      panel.grid.major.x = element_line(colour = fgcolor),
      panel.grid.minor.x = element_line(colour = fgcolor),
      text = element_text(colour = fgcolor),
      axis.text = element_text(colour = fgcolor),
      rect = element_rect(colour = bgcolor, fill = bgcolor),
      plot.background = element_rect(fill = bgcolor, colour = NA),
      axis.line = element_line(colour = fgcolor),
      axis.ticks = element_line(colour = fgcolor)
    )
}

ggplot_theme_brand <- function(brand_yml) {
  brand <- yaml::yaml.load_file(brand_yml)
  ggplot_theme_colors(brand$color$background, brand$color$foreground)
}

united_theme_gg<- ggplot_theme_brand('C:/Users/jacob/OneDrive - Université Laval/quarto-light-dark-experiments/united-brand.yml')
slate_theme_gg <- ggplot_theme_brand('C:/Users/jacob/OneDrive - Université Laval/quarto-light-dark-experiments/slate-brand.yml')

```



### crossref, no caption

::: {#fig-plotly-sepal-length}

```{r}
#| renderings: [light, dark]

fig <- plot_ly(iris, x = ~Species, y = ~Sepal.Length, type = 'violin',
               box = list(visible = TRUE),
               meanline = list(visible = TRUE),
               points = 'all')

fig |> united_theme()

fig |> slate_theme()

library(kableExtra)
kable(iris)
```

:::

### caption, no crossref

::: {}
```{r}
#| renderings: [light, dark]

# Load the iris dataset
data("iris")

fig <- plot_ly(iris, x = ~Species, y = ~Petal.Width, type = 'violin',
               box = list(visible = TRUE),
               meanline = list(visible = TRUE),
               points = 'all')

fig |> united_theme()

fig |> slate_theme()
```
:::
## Setup

```{r}
library(tidyverse)
library(openalexR)
options(openalexR.mailto = "jaham43@ulaval.ca")
```


```{r}
source_id <- "s131583313"  # Replace with the correct source ID

# Query the source information (optional, for confirmation)
jours_all <- oa_fetch(
  entity = "works",
  primary_location.source.id = "3As75346102",
  verbose = TRUE
)
```

So, we get around 1, 913 documents. Out of them, how many are articles? A majority, in fact, 1 863 are considered as article by openalex

```{r}
jours_all |> count(type, sort = TRUE)

articles <- jours_all |> filter(type == "article") # 1, 863
articles <-  articles |> mutate(year = year(publication_date))

gt_tbl <- gt(articles)

```

Now, for all of these articles, how many of them got an abstract?

```{r}
articles_abstract <- articles |> filter(is.na(abstract)) # 1 706
articles_abstract <- articles_abstract |> count(year)

```

Still, we see that most of our articles have an abstract.

```{r}
no_abstract_year <- articles |> filter(!is.na(abstract)) |> count(year)


no_abstract_year <- no_abstract_year |>
  count(year, sort = T)
no_abstract_year

```


```{r}
#| renderings: [light, dark]
full_data <- full_join(no_abstract_year, articles_abstract, "year")
full_data <- full_data |> mutate(ratio = n.x/n.y)

p <- ggplot(full_data, aes(x = year, y = ratio))+ 
  geom_smooth() + 
  geom_line() +
  labs(title = "Ratio of missing abstract over all documents", x = "Year", y = "Ratio")
```


## Example


## ggplot2

```{r}
library(ggplot2)

ggplot_theme_colors <- function(bgcolor, fgcolor) {
  theme_minimal(base_size = 11) %+%
    theme(
      panel.border = element_blank(),
      panel.grid.major.y = element_line(colour = fgcolor),
      panel.grid.minor.y = element_line(colour = fgcolor),
      panel.grid.major.x = element_line(colour = fgcolor),
      panel.grid.minor.x = element_line(colour = fgcolor),
      text = element_text(colour = fgcolor),
      axis.text = element_text(colour = fgcolor),
      rect = element_rect(colour = bgcolor, fill = bgcolor),
      plot.background = element_rect(fill = bgcolor, colour = NA),
      axis.line = element_line(colour = fgcolor),
      axis.ticks = element_line(colour = fgcolor)
    )
}

ggplot_theme_brand <- function(brand_yml) {
  brand <- yaml::yaml.load_file(brand_yml)
  ggplot_theme_colors(brand$color$background, brand$color$foreground)
}
```



```{r}
#| renderings: [light, dark]

ggplotly(p + united_theme_gg) |> united_theme()
ggplotly(p + slate_theme_gg) |> slate_theme()

```


### Ratio of missing abstract over all documents
::: {#fig-plotly}

:::


