---
title: "Chapitre 2 : Une obsession philosophique? Le cas de la philosophie de la biologie"
date: 2025-04-28
author:
  - name: Jacob Hamel-Mottiez
    id: jhm
    orcid: 0009-0007-3666-908X
    email: jacob.hamel-mottiez.1@ulaval.ca
    affiliation: 
      - name: Laval University

abstract:
    Annexe technique pour le chapitre 2. 

execute: 
  freeze: auto  # re-render only when source changes
  #enabled: true # This is so that Plotly is rendered. 
format: 
  html:
    code-fold: true
    toc: true
    number-sections: true
    fig_width: 100%   # Width will be 100% of the container
    fig_height: 500   # Height in pixels
keywords:
  - Philosophy of Biology
  - Biology
  - Bibliometrics
  - Topic modeling
  - BERTopic

brand:
  light: "C:/Users/jacob/OneDrive - Université Laval/quarto-light-dark-experiments/united-brand.yml"
  dark: "C:/Users/jacob/OneDrive - Université Laval/quarto-light-dark-experiments/slate-brand.yml"

license: "CC BY"
copyright: 
  holder: Jacob Hamel-Mottiez
  year: 2024
funding: "The author received funding from the Social Sciences and Humanities Canadian Reseach Council (SSHCRC) as well as from the Fonds de recherche du Québec - Société et culture."
---


```{r}
#| echo: false
#| warning: false

# PACKAGES ----------------------------------------------------------------
library(dplyr)
library(refinr)
library(DT)
library(data.table)
library(readr)
library(ggplot2)
require(patchwork)
library(ggplot2)
library(ggrepel)
library(readxl)
library(tidyverse)
library(ggstream)
library(viridis)
library(viridisLite)
library(chromote)
```

<!--# Dark theme plotly settings -->
```{r DARK THEME PLOTLY}
#| echo: false
#| warning: false

library(plotly)

plotly_brand <- function(brand_yml, title, x, y) {
  brand <- yaml::yaml.load_file(brand_yml)
  return (
    function(plot)
      plot |> layout(
        paper_bgcolor = brand$color$background,
        plot_bgcolor = brand$color$background,
        title = list(font = list(
          color = brand$color$foreground, size = 20
        )),
        # Plot title font
        xaxis = list(
          titlefont = list(color = brand$color$foreground, size = 16),
          # x-axis title font
          tickfont = list(color = brand$color$foreground, size = 14)      # x-axis tick font
        ),
        yaxis = list(
          titlefont = list(color = brand$color$foreground, size = 16),
          # y-axis title font
          tickfont = list(color = brand$color$foreground, size = 14)      # y-axis tick font
        )
      )
  )
}
      
      

united_theme <- plotly_brand('C:/Users/jacob/OneDrive - Université Laval/quarto-light-dark-experiments/united-brand.yml')
slate_theme <- plotly_brand('C:/Users/jacob/OneDrive - Université Laval/quarto-light-dark-experiments/slate-brand.yml')

```

<!--# Dark theme ggplot settings -->
```{r DARK THEME ggplot2}
#| warning: false

ggplot_theme_colors <- function(bgcolor, fgcolor) {
  theme_minimal(base_size = 11) %+%
    theme(
      panel.border = element_blank(),
      #panel.grid.major.y = element_line(colour = fgcolor),
      panel.grid.minor.y = element_line(colour = fgcolor),
      #panel.grid.major.x = element_line(colour = fgcolor),
      panel.grid.minor.x = element_line(colour = fgcolor),
      text = element_text(colour = fgcolor),
      axis.text = element_text(colour = fgcolor),
      rect = element_rect(colour = bgcolor, fill = bgcolor),
      plot.background = element_rect(fill = bgcolor, colour = NA),
      #axis.line = element_line(colour = fgcolor),
      axis.ticks = element_line(colour = fgcolor), 
      strip.text = element_text(colour = fgcolor)
    )
}

ggplot_theme_brand <- function(brand_yml) {
  brand <- yaml::yaml.load_file(brand_yml)
  ggplot_theme_colors(brand$color$background, brand$color$foreground)
}

united_theme_gg<- ggplot_theme_brand('C:/Users/jacob/OneDrive - Université Laval/quarto-light-dark-experiments/united-brand.yml')
slate_theme_gg <- ggplot_theme_brand('C:/Users/jacob/OneDrive - Université Laval/quarto-light-dark-experiments/slate-brand.yml')
```

<!--# Tables setting -->
```{r DARK THEME gt}

#| echo: false
#| warning: false

gt_theme_colors <- function(bg, fg)
  (function(table)
    table |>
    tab_options(
      table.background.color=bg,
      table.font.color=fg,
    )
  )


gt_theme_brand <- function(brand_yml) {
  brand <- yaml::yaml.load_file(brand_yml)
  gt_theme_colors(brand$color$background, brand$color$foreground)
}
united_theme_gt <- gt_theme_brand('C:/Users/jacob/OneDrive - Université Laval/quarto-light-dark-experiments/united-brand.yml')
slate_theme_gt <- gt_theme_brand('C:/Users/jacob/OneDrive - Université Laval/quarto-light-dark-experiments/slate-brand.yml')

interactivity  <- function(data) {
  opt_interactive(data,
  use_search = TRUE,
  use_filters = FALSE,
  use_resizers = TRUE,
  use_highlight = TRUE,
  use_compact_mode = FALSE,
  use_text_wrapping = TRUE,
  use_page_size_select = FALSE,
  page_size_default = 10,
  page_size_values = c(10, 25, 50, 100),
  pagination_type = c("numbers", "jump", "simple"),
  height = "auto"
)
}
```


```{r}
set.seed(666L)
asd <- data.frame(
  week = c(1, 2, 3, 4, 5, 6, 7, 8), 
  a    = rpois(8L, 30), 
  b    = rpois(8L, 25)
)
js <- c(
  'function(gd) {',
  '  Plotly.Snapshot.toImage(gd, {format: "png"}).once(',
  '    "success",',
  '    async function(url) {',
  '      try {',
  '        const data = await fetch(url);',
  '        const blob = await data.blob();',
  '        await navigator.clipboard.write([',
  '          new ClipboardItem({',
  '            [blob.type]: blob',
  '          })',
  '        ]);',
  '        console.log("Image copied.");',
  '        var $div = $("<div>Image copied to clipboard</div>");',
  '        $div.css({',
  '          display: "none",',
  '          position: "absolute",',
  '          top: "5%",',
  '          left: "50%",',
  '          transform: "translate(-50%, 0)",',
  '          "font-size": "30px",',
  '          "font-family": "Tahoma, sans-serif",',
  '          "font-style": "italic",',
  '          "background-color": "seashell",',
  '          padding: "10px",',
  '          border: "2px solid black",',
  '          "border-radius": "5px"',
  '        });',
  '        $div.appendTo("body");',
  '        $div.fadeIn(3000, function() {',
  '          $div.fadeOut(3000);',
  '        });',
  '      } catch(err) {',
  '        console.error(err.name, err.message);',
  '      }',
  '    }',
  '  );',
  '}'
)
SVGicon_path <- paste0(
  "M97.67,20.81L97.67,20.81l0.01,0.02c3.7,0.01,7.04,1.51,9.46,3.93c2.4,2.",
  "41,3.9,5.74,3.9,9.42h0.02v0.02v75.28 v0.01h-0.02c-0.01,3.68-1.51,7.03-",
  "3.93,9.46c-2.41,2.4-5.74,3.9-9.42,3.9v0.02h-0.02H38.48h-0.01v-0.02 c-3",
  ".69-0.01-7.04-1.5-9.46-3.93c-2.4-2.41-3.9-5.74-3.91-9.42H25.1c0-25.96,",
  "0-49.34,0-75.3v-0.01h0.02 c0.01-3.69,1.52-7.04,3.94-9.46c2.41-2.4,5.73",
  "-3.9,9.42-3.91v-0.02h0.02C58.22,20.81,77.95,20.81,97.67,20.81L97.67,20",
  ".81z M0.02,75.38L0,13.39v-0.01h0.02c0.01-3.69,1.52-7.04,3.93-9.46c2.41",
  "-2.4,5.74-3.9,9.42-3.91V0h0.02h59.19 c7.69,0,8.9,9.96,0.01,10.16H13.4h",
  "-0.02v-0.02c-0.88,0-1.68,0.37-2.27,0.97c-0.59,0.58-0.96,1.4-0.96,2.27h",
  "0.02v0.01v3.17 c0,19.61,0,39.21,0,58.81C10.17,83.63,0.02,84.09,0.02,75",
  ".38L0.02,75.38z M100.91,109.49V34.2v-0.02h0.02 c0-0.87-0.37-1.68-0.97-",
  "2.27c-0.59-0.58-1.4-0.96-2.28-0.96v0.02h-0.01H38.48h-0.02v-0.02c-0.88,",
  "0-1.68,0.38-2.27,0.97 c-0.59,0.58-0.96,1.4-0.96,2.27h0.02v0.01v75.28v0",
  ".02h-0.02c0,0.88,0.38,1.68,0.97,2.27c0.59,0.59,1.4,0.96,2.27,0.96v-0.0",
  "2h0.01 h59.19h0.02v0.02c0.87,0,1.68-0.38,2.27-0.97c0.59-0.58,0.96-1.4,",
  "0.96-2.27L100.91,109.49L100.91,109.49L100.91,109.49 L100.91,109.49z"
)
CopyToClipboard <- list(
  name = "Copy",
  icon = list(
    path   = SVGicon_path,
    width  = 111,
    height = 123
  ),
  click = htmlwidgets::JS(js)
)

```


## Gayon Results
### Data
```{r}


tbl_1 <- tribble(
  ~Year, ~Studies_Biological_Theories, ~Philosophical_Questions, ~Historical_Articles, ~Total_Papers,
  1986, 5, 11, 3, 19,
  1987, 22, 3, 2, 28,
  1988, 10, 20, 2, 32,
  1989, 23, 8, 2, 33,
  1990, 8, 10, 3, 21,
  1991, 7, 10, 5, 22,
  1992, 13, 7, 2, 22,
  1993, 8, 9, 4, 20,
  1994, 9, 8, 2, 19,
  1995, 10, 9, 1, 20,
  1996, 9, 9, 2, 20,
  1997, 9, 9, 0, 18,
  1998, 11, 7, 6, 24,
  1999, 14, 6, 6, 25,
  2000, 10, 7, 4, 26,
  2001, 13, 7, 6, 26,
  2002, 17, 6, 3, 26
)

long_tbl_1 <- tbl_1 %>% 
  pivot_longer(cols = -Year,  # Pivot all columns except 'Year'
               names_to = "Category", 
               values_to = "Count")




tbl_2 <- tribble(
  ~Year, ~Evolution, ~Taxonomy, ~Species, ~Ecology, ~Genetics, ~Other,
  1986, 3, 0, 0, 1, 0, 1,
  1987, 8, 0, 13, 0, 0, 1,
  1988, 3, 0, 6, 0, 0, 1,
  1989, 17, 0, 4, 1, 0, 1,
  1990, 3, 0, 1, 0, 0, 1,
  1991, 4, 0, 0, 0, 1, 1,
  1992, 7, 1, 0, 2, 1, 2,
  1993, 1, 0, 0, 2, 0, 1,
  1994, 0, 0, 0, 0, 0, 2,
  1995, 0, 0, 0, 0, 0, 1,
  1996, 6, 1, 2, 1, 0, 1,
  1997, 5, 0, 0, 1, 0, 2,
  1998, 3, 0, 0, 1, 1, 2,
  1999, 3, 0, 1, 0, 0, 1,
  2000, 7, 0, 0, 2, 1, 1,
  2001, 3, 0, 0, 0, 0, 2,
  2002, 9, 0, 2, 0, 1, 4
)

tbl_2 <- tbl_2 |> rowwise() %>% 
  mutate(Total_Papers = sum(c_across(-Year), na.rm = TRUE)) %>% 
  ungroup()

long_tbl_2 <- tbl_2 %>% 
  pivot_longer(cols = -Year,  # Pivot all columns except 'Year'
               names_to = "Category", 
               values_to = "Count")


tbl_3 <- tribble(
  ~Year, ~Evolutionary_Epistemology, ~Ethics_Biology, ~Nature_Culture, ~Function_Design, ~Reflexions_Biology, ~Other,
  1986, 2, 7, 1, 1, 0, 0,
  1987, 19, 1, 0, 0, 1, 0,
  1988, 1, 3, 2, 0, 0, 1,
  1989, 17, 0, 2, 1, 0, 0,
  1990, 3, 0, 1, 1, 0, 0,
  1991, 0, 2, 1, 0, 1, 0,
  1992, 2, 3, 3, 1, 0, 1,
  1993, 3, 3, 0, 1, 1, 0,
  1994, 2, 3, 1, 0, 0, 0,
  1995, 2, 3, 0, 0, 1, 0,
  1996, 5, 1, 0, 3, 1, 2,
  1997, 1, 5, 0, 1, 0, 0,
  1998, 2, 2, 0, 0, 2, 1,
  1999, 0, 3, 0, 2, 1, 1,
  2000, 2, 1, 0, 2, 2, 1,
  2001, 1, 0, 0, 2, 1, 3,
  2002, 0, 0, 0, 1, 2, 3
)
```


```{r}
#| renderings: [light,dark]

tbl_3 <- tbl_3 |> rowwise() %>% 
  mutate(Total_Papers = sum(c_across(-Year), na.rm = TRUE)) %>% 
  ungroup()

long_tbl_3 <- tbl_3 %>% 
  pivot_longer(cols = -Year,  # Pivot all columns except 'Year'
               names_to = "Category", 
               values_to = "Count")

 

label_plot1<- long_tbl_1 |> select(Category, Year, Count) |> filter(Category != "Total_Papers", Year == max(Year-1)) |> distinct()

p3 <- ggplot(long_tbl_3 |> filter(Category != "Total_Papers"), aes(x=Year, y = Count, group = Category, color = Category)) +
  #geom_point()+
  geom_smooth(se = FALSE, span = 1,  aes(fill = Category), alpha = 0.2) +
   #facet_grid(~Category) 
theme(legend.key.size = unit(1, 'cm'), 
  legend.text = element_text(size=20))

  
p <- ggplot(long_tbl_3 |> filter(Category != "Total_Papers"), aes(x=Year, y = Count, group = Category, color = Category, fill = Category)) + 
  geom_stream()

ggplotly(p + united_theme_gg) |> united_theme()
ggplotly(p + slate_theme_gg) |> slate_theme()

```


```{r}
#| renderings: [light,dark]

p <- ggplot(long_tbl_1 |> filter(Category != "Total_Papers"), aes(x=Year, y = Count, group = Category, color = Category, fill = Category)) + 
  geom_stream() +
  scale_fill_viridis(discrete = TRUE, option = "D", direction = -1) + 
  scale_color_viridis(discrete = TRUE, option = "D", direction = -1) + 
  theme( 
        legend.position = "top",
        legend.title=element_blank(),
        axis.text.y = element_blank(),  # Remove y-axis ticks
        axis.ticks.y = element_blank(), # Remove y-axis tick marks
        axis.title.y = element_blank()  # Remove y-axis title
        )

ggplotly(p + united_theme_gg) |> united_theme()
ggplotly(p + slate_theme_gg) |> slate_theme()
```


```{r}
#| renderings: [light,dark]

p <- ggplot(long_tbl_2 |> filter(Category != "Total_Papers"), aes(x=Year, y = Count, group = Category, color = Category, fill = Category)) + 
  geom_stream()  +
  scale_fill_viridis(discrete = TRUE, option = "C") + 
  scale_color_viridis(discrete = TRUE, option = "C")+ 
  theme(legend.key.size = unit(1, 'cm'), 
        legend.text = element_text(size=20),
              axis.title.x =element_text(size=20),
              axis.text.x = element_text(size = 20),
              legend.position = "top",
              legend.title=element_blank(),
              axis.text.y = element_blank(),  # Remove y-axis ticks
              axis.ticks.y = element_blank(), # Remove y-axis tick marks
              axis.title.y = element_blank()  # Remove y-axis title
        )
ggplotly(p + united_theme_gg) |> united_theme()
ggplotly(p + slate_theme_gg) |> slate_theme()
```


```{r}
#| renderings: [light,dark]

p <- ggplot(long_tbl_3 |> filter(Category != "Total_Papers"), aes(x=Year, y = Count, group = Category, color = Category, fill = Category)) + 
  geom_stream() + 
  scale_fill_viridis(discrete = TRUE, option = "F") + 
  scale_color_viridis(discrete = TRUE, option = "F")+ 
  theme(legend.key.size = unit(1, 'cm'), 
        legend.text = element_text(size=20),
              axis.title.x =element_text(size=20),
              axis.text.x = element_text(size = 20),
              legend.position = "top",
              legend.title=element_blank(),
              axis.text.y = element_blank(),  # Remove y-axis ticks
              axis.ticks.y = element_blank(), # Remove y-axis tick marks
              axis.title.y = element_blank()  # Remove y-axis title
        ) 
ggplotly(p + united_theme_gg) |> united_theme()
ggplotly(p + slate_theme_gg) |> slate_theme()

```

## Pradeu's Results (Philosophy of Biology)
```{r}
#| renderings: [light,dark]


# Names of the disciplines
disciplines_BP_2003_2015 <- tibble(
  discipline = c(
    #"Agricultural Sciences",
    #"Anthropology",
    #"Applied Biological Sciences",
    #"Biophysics & Computational Biology",
    #"Cell Biology",
    #"Environmental Sciences",
    #"Immunology & Inflammation",
    "Microbiology",
    #"Pharmacology",
    #"Physiology",
    #"Plant Biology",
    #"Population Biology",
    #"Sustainability Science",
    #"Systems Biology",
    "Evolution",
    "Develop. Biology",
    "Biochemistry",
    "Psycho. and Cog. Sciences",
    "Neuroscience",
    "Medical Sciences",
    "Genetics",
    "Ecology"
  ),
  #percentage = c(0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 62, 4, 2, 14, 3, 2, 5, 3),
  percentage = c(3, 62, 4, 2, 14, 3, 2, 5, 3),
  journal = "B&P"
)

disciplines_BP_1986_2002 <- tibble(
  discipline = c(
    "Evolution",
    "Others",
    "Reflections on Biology in general",
    "Evolutionary Ethics",
    "Evolutionary Epistemology",
    "Genetics",
    "Ecology",
    "Species",
    "Taxonomy",
    "Function, Teleology, Design"
  ),
  percentage = c(25, 25, 6, 11, 12, 3, 4, 9, 3, 4),
  journal = "B&P"
)


# Combine into a data frame (optional)
BP_tb <- rbind(disciplines_BP_1986_2002, disciplines_BP_2003_2015)


# ggplot
p1 <- ggplot(data = BP_tb, mapping = aes(x=discipline, y = percentage, color = discipline, fill = discipline)) + 
  geom_bar(stat = "identity") + 
  theme(
    legend.position="bottom", 
    legend.box = "horizontal",
    legend.title = element_blank(),
    axis.text.x=element_blank(), 
    axis.ticks.x=element_blank()
    ) + 
  labs(title = "Themes in Biology in Philosophy according to Pradeu", x = "Discipline", y = "Percentage")


ggplotly(p1 + united_theme_gg) |> united_theme() |> 
  layout(xaxis = list(showticklabels=F, ticks = ""))

ggplotly(p1 + slate_theme_gg) |> slate_theme() |> 
  layout(xaxis = list(showticklabels=F, ticks = ""))
  
```

## Pradeu's Results (Biology)
```{r}
#| renderings: [light,dark]


# PNAS --------------------------------------------------------------------
# Names of the disciplines
disciplines_PNAS <- tibble(
  discipline = c(
    #"Population Biology",
    "Plant Biology",
    "Physiology",
    "Pharmacology",
    "Neuroscience",
    "Microbiology",
    "Medical Sciences",
    "Immunology & Inflammation",
    "Genetics",
    "Biochemistry",
    "Biophys. & Comput. Biology",
    "Cell Biology",
    "Ecology",
    "Evolution",
    "Develop. Biology",
    "Enviro. Sciences",
    "Applied Biol. Sciences",
    "Anthropology",
    "Agricultural Sciences",
    "Systems Biology",
    "Psycho. and Cog. Sciences",
    "Sustainability Science"
  ),
  #percentage = c(0, 4, 2, 1, 12, 7, 10, 7, 5, 12, 9, 8, 3, 5, 3, 2, 2, 2, 1, 1, 3, 1)
  percentage = c(4, 2, 1, 12, 7, 10, 7, 5, 12, 9, 8, 3, 5, 3, 2, 2, 2, 1, 1, 3, 1)
  )


# Combine into a data frame (optional)
PNAS_tb <- disciplines_PNAS |> mutate(journal = "PNAS")

plot <- ggplot(data = PNAS_tb, mapping = aes(x=discipline, y = percentage, color = discipline, fill = discipline)) + 
  geom_bar(stat = "identity") + 
  theme(
  legend.position="bottom", 
  legend.box = "horizontal",
  legend.title = element_blank(),
  axis.text.x=element_blank(), 
  axis.ticks.x=element_blank(), 
) + labs(title = "Themes in PNAS", x = "Discipline", y = "Percentage") + 
  ylim(c(0,60))

ggplotly(plot + united_theme_gg) |> united_theme() |> 
  layout(showlegend = T, xaxis = list(showticklabels=F, ticks = ""), xaxis2 = list(showticklabels=F, ticks = ""))

ggplotly(plot + slate_theme_gg) |> slate_theme() |> 
  layout(xaxis = list(showticklabels=F, ticks = ""), xaxis2 = list(showticklabels=F, ticks = ""))


```



## Compare Biology and Philosophy of biology
```{r}
#| renderings: [light,dark]

# Merged data.table
merged_tb  <- rbind(PNAS_tb, disciplines_BP_2003_2015) #BP_tb )


plot1 <- ggplot(data = merged_tb, mapping = aes(x = discipline, y = percentage, fill = discipline)) + 
    geom_bar(stat = "identity") +
    labs(x = "Discipline", y = "Pourcentage")+
    facet_grid(~journal)


ggplotly(plot1 + united_theme_gg) |> united_theme() |> 
  layout(showlegend = T, xaxis = list(showticklabels=F, ticks = ""), xaxis2 = list(showticklabels=F, ticks = "")) |> config(modeBarButtonsToAdd = list(CopyToClipboard))

ggplotly(plot1 + slate_theme_gg) |> slate_theme() |> 
  layout(xaxis = list(showticklabels=F, ticks = ""), xaxis2 = list(showticklabels=F, ticks = ""))

```


## Another Comparative Visualisation
```{r}
merged_tb <- merged_tb %>%
  mutate(discipline = fct_reorder(discipline, percentage))

plot1 <- ggplot(data = merged_tb, mapping = aes(x = discipline, y = percentage, fill = journal)) + 
    geom_bar(stat = "identity", position = "dodge") +
    labs(y = "Percentage", title = "B&P vs PNAS : A Thematic Comparison") + 
theme(
    plot.title = element_text(hjust = 0.5),
    axis.text.x = element_text(angle = 60, hjust = 1),
    legend.position = "top",
    legend.title = element_blank(), 
    axis.title.x = element_blank()
  )
plot1
```




Malaterre Results
```{r}
#| renderings: [light,dark]


# Malaterre et al. (2020) vs Pradeu (2017) --------------------------------
TM_dt <- data.table(
  Discipline = c("A-Evolution", 
               "B-Individuality-Altruism", 
               "C-Species-Ecology", 
               "D-Genetics-Development", 
               "E-Network-entropy-information", 
               "F-Cognition-behavior", 
               "G-Socio-normative issues", 
               "H-General philosophy of science", 
               "I-Others"),
  Percentage = c(18, 8, 9, 10, 6, 10, 9, 22, 8),
  Data = c("TM")
)


plot <- ggplot(data = TM_dt, mapping = aes(x = Discipline, y = Percentage, fill = Discipline)) + 
  geom_bar(stat = "identity") + 
  ylim(c(0,60)) + 
  labs(title = "Themes in philosophy of biology using LDA")


ggplotly(plot + united_theme_gg) |> united_theme() |> layout(showlegend = F, xaxis = list(tickangle=45))
ggplotly(plot + slate_theme_gg) |> slate_theme() |> layout(showlegend = F, xaxis = list(tickangle=45))


```

## How Does these themes evolves through time? 
*to do* 



