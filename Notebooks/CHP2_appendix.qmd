---
title: "Chapitre 2 : Une obsession philosophique? Le cas de la philosophie de la biologie"
date: 2025-04-28
author:
  - name: Jacob Hamel-Mottiez
    id: jhm
    orcid: 0009-0007-3666-908X
    email: jacob.hamel-mottiez.1@ulaval.ca
    affiliation: 
      - name: Laval University

abstract:
    Annexe technique pour le chapitre 2. 

execute: 
  freeze: auto  # re-render only when source changes
  #enabled: true # This is so that Plotly is rendered. 
format: 
  html:
    code-fold: true
    toc: true
    number-sections: true
    fig_width: 100%   # Width will be 100% of the container
    fig_height: 500   # Height in pixels
keywords:
  - Philosophy of Biology
  - Biology
  - Bibliometrics
  - Topic modeling
  - BERTopic

theme:
  light: flatly
  dark: darkly


license: "CC BY"
copyright: 
  holder: Jacob Hamel-Mottiez
  year: 2024
funding: "The author received funding from the Social Sciences and Humanities Canadian Reseach Council (SSHCRC) as well as from the Fonds de recherche du Québec - Société et culture."
---

format: html editor: visual ---

```{r}
#| warning: false
# PACKAGES ----------------------------------------------------------------
library(tidyverse)
library(plotly)
library(readxl)
library(ggplot2)
library(ggrepel)
library(directlabels)
library(highcharter)
library(ggstream)
library(viridis)
library(patchwork)
library(tibble)



```

# 

# Une obsession philosophique? Le cas de la philosophie de la biologie"

## 1. Des idées recues mises en cause

NA

## 2. Gayon à l'intersection des traditions

Évolution temporelle des types d'articles publiés dans Biology and Philosophy

::: {#fig-caption-crossref}
```{r}
#| renderings: [light, dark]
#par(bg = "#FFFFFF", fg = "#000000")
#plot(1:10) # Shown in `light` mode

plot(1:10) # Shown in `dark` mode


```
:::

```{r}

# DATA --------------------------------------------------------------------
library(tibble)

tbl_1 <- tribble(
  ~Year, ~Studies_Biological_Theories, ~Philosophical_Questions, ~Historical_Articles, ~Total_Papers,
  1986, 5, 11, 3, 19,
  1987, 22, 3, 2, 28,
  1988, 10, 20, 2, 32,
  1989, 23, 8, 2, 33,
  1990, 8, 10, 3, 21,
  1991, 7, 10, 5, 22,
  1992, 13, 7, 2, 22,
  1993, 8, 9, 4, 20,
  1994, 9, 8, 2, 19,
  1995, 10, 9, 1, 20,
  1996, 9, 9, 2, 20,
  1997, 9, 9, 0, 18,
  1998, 11, 7, 6, 24,
  1999, 14, 6, 6, 25,
  2000, 10, 7, 4, 26,
  2001, 13, 7, 6, 26,
  2002, 17, 6, 3, 26
)
print(tbl_1)

long_tbl_1 <- tbl_1 %>% 
  pivot_longer(cols = -Year,  # Pivot all columns except 'Year'
               names_to = "Category", 
               values_to = "Count")




tbl_2 <- tribble(
  ~Year, ~Evolution, ~Taxonomy, ~Species, ~Ecology, ~Genetics, ~Other,
  1986, 3, 0, 0, 1, 0, 1,
  1987, 8, 0, 13, 0, 0, 1,
  1988, 3, 0, 6, 0, 0, 1,
  1989, 17, 0, 4, 1, 0, 1,
  1990, 3, 0, 1, 0, 0, 1,
  1991, 4, 0, 0, 0, 1, 1,
  1992, 7, 1, 0, 2, 1, 2,
  1993, 1, 0, 0, 2, 0, 1,
  1994, 0, 0, 0, 0, 0, 2,
  1995, 0, 0, 0, 0, 0, 1,
  1996, 6, 1, 2, 1, 0, 1,
  1997, 5, 0, 0, 1, 0, 2,
  1998, 3, 0, 0, 1, 1, 2,
  1999, 3, 0, 1, 0, 0, 1,
  2000, 7, 0, 0, 2, 1, 1,
  2001, 3, 0, 0, 0, 0, 2,
  2002, 9, 0, 2, 0, 1, 4
)
print(tbl_2)


tbl_2 <- tbl_2 |> rowwise() %>% 
  mutate(Total_Papers = sum(c_across(-Year), na.rm = TRUE)) %>% 
  ungroup()

long_tbl_2 <- tbl_2 %>% 
  pivot_longer(cols = -Year,  # Pivot all columns except 'Year'
               names_to = "Category", 
               values_to = "Count")


tbl_3 <- tribble(
  ~Year, ~Evolutionary_Epistemology, ~Ethics_Biology, ~Nature_Culture, ~Function_Design, ~Reflexions_Biology, ~Other,
  1986, 2, 7, 1, 1, 0, 0,
  1987, 19, 1, 0, 0, 1, 0,
  1988, 1, 3, 2, 0, 0, 1,
  1989, 17, 0, 2, 1, 0, 0,
  1990, 3, 0, 1, 1, 0, 0,
  1991, 0, 2, 1, 0, 1, 0,
  1992, 2, 3, 3, 1, 0, 1,
  1993, 3, 3, 0, 1, 1, 0,
  1994, 2, 3, 1, 0, 0, 0,
  1995, 2, 3, 0, 0, 1, 0,
  1996, 5, 1, 0, 3, 1, 2,
  1997, 1, 5, 0, 1, 0, 0,
  1998, 2, 2, 0, 0, 2, 1,
  1999, 0, 3, 0, 2, 1, 1,
  2000, 2, 1, 0, 2, 2, 1,
  2001, 1, 0, 0, 2, 1, 3,
  2002, 0, 0, 0, 1, 2, 3
)
print(tbl_3)

tbl_3 <- tbl_3 |> rowwise() %>% 
  mutate(Total_Papers = sum(c_across(-Year), na.rm = TRUE)) %>% 
  ungroup()

long_tbl_3 <- tbl_3 %>% 
  pivot_longer(cols = -Year,  # Pivot all columns except 'Year'
               names_to = "Category", 
               values_to = "Count")

 

label_plot1<- long_tbl_1 |> select(Category, Year, Count) |> filter(Category != "Total_Papers", Year == max(Year-1)) |> distinct()


# VISUALIZATION -----------------------------------------------------------
ggplot(long_tbl_1 |> filter(Category != "Total_Papers"), aes(x=Year, y = Count, group = Category, color = Category)) +
  #geom_point()+
  geom_smooth(se = FALSE, span = 1, aes(fill = Category), alpha = 0.2) +
  theme(legend.position = "none")+
  scale_x_discrete(expand=c(0, 1)) +
  geom_dl(aes(label = "Category"), method = "first.points", cex = 0.8)

  geom_label_repel(data = long_tbl_1 %>% filter(Year == max(Year)), aes(label=Category), show.legend = FALSE)

  #facet_grid(~Category)


label_plot2<- long_tbl_2 |> select(Category, Year, Count) |> filter(Category != "Total_Papers", Year == max(Year)) |> distinct()
ggplot(long_tbl_2 |> filter(Category != "Total_Papers"), aes(x=Year, y = Count, group = Category, color = Category)) +
  geom_smooth(se = FALSE, span = 1,  aes(fill = Category), linewidth = 1.5, alpha = 0.2)+ 
  geom_point()+
  geom_label_repel(data = label_plot2, aes(label=Category), show.legend = FALSE)
  #facet_grid(~Category)


p3 <- ggplot(long_tbl_3 |> filter(Category != "Total_Papers"), aes(x=Year, y = Count, group = Category, color = Category)) +
  #geom_point()+
  geom_smooth(se = FALSE, span = 1,  aes(fill = Category), alpha = 0.2) +
   #facet_grid(~Category) 
theme(legend.key.size = unit(1, 'cm'), 
  legend.text = element_text(size=20))

  
ggplot(long_tbl_3 |> filter(Category != "Total_Papers"), aes(x=Year, y = Count, group = Category, color = Category, fill = Category)) + 
  geom_stream()
  


x <- ggplot(long_tbl_1 |> filter(Category != "Total_Papers"), aes(x=Year, y = Count, group = Category, color = Category, fill = Category)) + 
  geom_stream() +
  scale_fill_viridis(discrete = TRUE, option = "D", direction = -1) + 
  scale_color_viridis(discrete = TRUE, option = "D", direction = -1) + 
  theme(legend.key.size = unit(2, 'cm'), 
        legend.text = element_text(size=30),
        axis.title.x =element_text(size=30),
        axis.text.x = element_text(size = 20),
        legend.position = "top",
        legend.title=element_blank(),
        axis.text.y = element_blank(),  # Remove y-axis ticks
        axis.ticks.y = element_blank(), # Remove y-axis tick marks
        axis.title.y = element_blank()  # Remove y-axis title
        ) 

y <- ggplot(long_tbl_2 |> filter(Category != "Total_Papers"), aes(x=Year, y = Count, group = Category, color = Category, fill = Category)) + 
  geom_stream()  +
  scale_fill_viridis(discrete = TRUE, option = "C") + 
  scale_color_viridis(discrete = TRUE, option = "C")+ 
  theme(legend.key.size = unit(1, 'cm'), 
        legend.text = element_text(size=20),
              axis.title.x =element_text(size=20),
              axis.text.x = element_text(size = 20),
              legend.position = "top",
              legend.title=element_blank(),
              axis.text.y = element_blank(),  # Remove y-axis ticks
              axis.ticks.y = element_blank(), # Remove y-axis tick marks
              axis.title.y = element_blank()  # Remove y-axis title
        ) 

z <- ggplot(long_tbl_3 |> filter(Category != "Total_Papers"), aes(x=Year, y = Count, group = Category, color = Category, fill = Category)) + 
  geom_stream() + 
  scale_fill_viridis(discrete = TRUE, option = "F") + 
  scale_color_viridis(discrete = TRUE, option = "F")+ 
  theme(legend.key.size = unit(1, 'cm'), 
        legend.text = element_text(size=20),
              axis.title.x =element_text(size=20),
              axis.text.x = element_text(size = 20),
              legend.position = "top",
              legend.title=element_blank(),
              axis.text.y = element_blank(),  # Remove y-axis ticks
              axis.ticks.y = element_blank(), # Remove y-axis tick marks
              axis.title.y = element_blank()  # Remove y-axis title
        ) 
  

```

```{r}

x

pl_for_jpeg<-x+
   theme(axis.text.x = element_blank(),
        axis.text.y = element_blank(),
        axis.ticks = element_blank(),
        plot.margin = unit(c(0,0,0,0),'mm'),
        panel.background = element_rect(fill = "transparent", color=NA),
        panel.grid.major = element_blank(),
        plot.background =  element_rect(fill = "transparent", color=NA),
        
   )


p <- x + theme(rect = element_rect(fill = "transparent"))
p
    
```

```{r}
#| label: caption-crossref
#| renderings: [light, dark]
#| 
y + theme(rect = element_rect(fill = "transparent"))



```

```{r}
y+z
```

```{r}

# Custom plot 

highlighted <- ggplot(long_tbl_1 |> filter(Category != "Total_Papers"), aes(x=Year, y = Count, group = Category, color = Category, fill = Category)) + 
  geom_stream() + 
  scale_fill_manual(values = c("gray", "gray", "#400059")) + 
  scale_color_manual(values = c("darkgray", "darkgray", "#400059")) + 
  theme(legend.key.size = unit(1, 'cm'), 
        legend.text = element_text(size=15),
        legend.position = "top",
        legend.title=element_blank()) 


highlighted + y

```

```{r}
#| renderings: [light, dark]
highlighted + z

```

```{r}

# With Highcharter --------------------------------------------------------
highchart() %>%
  hc_chart(type = "streamgraph") %>%
  hc_title(text = "Streamgraph ") %>%
  hc_xAxis(categories = tbl_1$Year, crosshair = TRUE) %>%
  hc_yAxis(visible = FALSE) %>%
  hc_plotOptions(series = list(marker = list(enabled = FALSE))) |> 
hc_add_series_list(
  lapply(names(tbl_1)[-1], function(cat) {
    list(
      name = cat,
      data = tbl_1[[cat]],
      stack = "stream"
    )
  })
)
```

```{r}
# PACKAGES ----------------------------------------------------------------
library(dplyr)
library(refinr)
library(DT)
library(data.table)
library(readr)
library(ggplot2)
require(patchwork)
library(ggplot2)
library(ggrepel)

# BIOLOGY AND PHILOSOPHY --------------------------------------------------
# Names of the disciplines
disciplines_BP_2003_2015 <- tibble(
  discipline = c(
    "Agricultural Sciences",
    "Anthropology",
    "Applied Biological Sciences",
    "Biophysics & Computational Biology",
    "Cell Biology",
    "Environmental Sciences",
    "Immunology & Inflammation",
    "Microbiology",
    "Pharmacology",
    "Physiology",
    "Plant Biology",
    "Population Biology",
    "Sustainability Science",
    "Systems Biology",
    "Evolution",
    "Developmental Biology",
    "Biochemistry",
    "Psychological and Cognitive Sciences",
    "Neuroscience",
    "Medical Sciences",
    "Genetics",
    "Ecology"
  ),
  percentage = c(0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 62, 4, 2, 14, 3, 2, 5, 3),
  journal = "B&P"
)



disciplines_BP_1986_2002 <- tibble(
  discipline = c(
    "Evolution",
    "Others",
    "Reflections on Biology in general",
    "Evolutionary Ethics",
    "Evolutionary Epistemology",
    "Genetics",
    "Ecology",
    "Species",
    "Taxonomy",
    "Function, Teleology, Design"
  ),
  percentage = c(25, 25, 6, 11, 12, 3, 4, 9, 3, 4),
  journal = "B&P"
)


# Combine into a data frame (optional)
BP_tb <- rbind(disciplines_BP_1986_2002, disciplines_BP_2003_2015)




# ggplot
ggplot(data = BP_tb, mapping = aes(x=discipline, y = percentage, color = discipline, fill = discipline)) + 
  geom_bar(stat = "identity") + 
  theme(
    legend.position="bottom", 
    legend.box = "horizontal",
    legend.title = element_blank(),
    axis.text.x=element_blank(), 
    axis.ticks.x=element_blank())


# PNAS --------------------------------------------------------------------
# Names of the disciplines
disciplines_PNAS <- tibble(
  discipline = c(
    "Population Biology",
    "Plant Biology",
    "Physiology",
    "Pharmacology",
    "Neuroscience",
    "Microbiology",
    "Medical Sciences",
    "Immunology & Inflammation",
    "Genetics",
    "Biochemistry",
    "Biophysics & Computational Biology",
    "Cell Biology",
    "Ecology",
    "Evolution",
    "Developmental Biology",
    "Environmental Sciences",
    "Applied Biological Sciences",
    "Anthropology",
    "Agricultural Sciences",
    "Systems Biology",
    "Psychological and Cognitive Sciences",
    "Sustainability Science"
  ),
  percentage = c(0, 4, 2, 1, 12, 7, 10, 7, 5, 12, 9, 8, 3, 5, 3, 2, 2, 2, 1, 1, 3, 1)
  )

# Associated percentages



# Combine into a data frame (optional)
PNAS_tb <- disciplines_PNAS |> mutate(journal = "PNAS")

# Merged data.table
merged_tb  <- rbind(PNAS_tb, BP_tb)

p <- ggplot(data = PNAS_tb, mapping = aes(x=discipline, y = percentage, color = discipline, fill = discipline)) + 
  geom_bar(stat = "identity") + 
  theme(
  legend.position="bottom", 
  legend.box = "horizontal",
  legend.title = element_blank(),
  axis.text.x=element_blank(), 
  axis.ticks.x=element_blank(), 
) + ylim(c(0,60))


p1 <- ggplot(data = BP_tb, mapping = aes(x=discipline, y = percentage, color = discipline, fill = discipline)) + 
  geom_bar(stat = "identity") + 
  theme(
    legend.position="bottom", 
    legend.box = "horizontal",
    legend.title = element_blank(),
    axis.text.x=element_blank(), 
    axis.ticks.x=element_blank())

p2 <- ggplot(data = merged_tb, mapping = aes(x = discipline, y = percentage, fill = discipline)) + 
    geom_bar(stat = "identity") + 
    theme_gray() +  # Apply the default ggplot2 theme
    theme(
      panel.background = element_rect(fill = "gray90", color = NA),  # Force the gray background
      panel.grid.major = element_line(color = "white"),  # Keep white gridlines
      legend.position = "bottom", 
      legend.box = "horizontal",
      legend.title = element_blank(),
      axis.text.x = element_blank(), 
      axis.ticks.x = element_blank(), 
      legend.text = element_text(size=20), 
      axis.title.y = element_text(size=25),
      axis.text.y = element_text(size = 20), 
      strip.text.x = element_text(size = 30), 
      axis.title.x = element_text(size = 25)
    ) +
    xlab("Discipline") +
    ylab("Pourcentage") +
    facet_grid(~journal)
  
  print(p2)
  


# Malaterre et al. (2020) vs Pradeu (2017) --------------------------------
TM_dt <- data.table(
  Discipline = c("A-Evolution", 
               "B-Individuality-Altruism", 
               "C-Species-Ecology", 
               "D-Genetics-Development", 
               "E-Network-entropy-information", 
               "F-Cognition-behavior", 
               "G-Socio-normative issues", 
               "H-General philosophy of science", 
               "I-Others"),
  Percentage = c(18, 8, 9, 10, 6, 10, 9, 22, 8),
  Data = c("TM")
)


p3 <- ggplot(data = TM_dt, mapping = aes(x = Discipline, y = Percentage, fill = Discipline)) + 
  geom_bar(stat = "identity") + 
  theme(
    legend.position = "bottom", 
    legend.box = "horizontal",
    legend.title = element_blank(),
    axis.text.x = element_blank(), 
    axis.ticks.x = element_blank()
  ) + ylim(c(0,60))



# Create the data frame
data <- data.frame(
  Discipline = c("A-Evolution", "B-Individuality-Altruism", "C-Species-Ecology", 
                 "D-Genetics-Development", "E-Network-entropy-information", 
                 "F-Cognition-behavior", "G-Socio-normative issues", 
                 "H-General philosophy of science", "I-Others"),
  Percentage = c(18, 8, 9, 10, 6, 10, 9, 22, 8),
  Evolution = c(rep(TRUE, 3), rep(FALSE, 6))
)


# Create the "whole corpus" plot
whole_corpus_plot <- ggplot(data, aes(x = 1, y = -Percentage, fill = Discipline, alpha = Evolution)) +
  geom_col(width = 0.1) +
  coord_flip() +
  theme_void()+
  theme(legend.position = "none") +
  scale_alpha_discrete(range = c(0.35, 0.95)) +
  scale_x_continuous(expand = c(0, 0)) +
  scale_y_continuous(expand = c(0, 0))
# Create the vertical bar plot
vertical_plot <- ggplot(data, aes(x = Discipline, y = Percentage, fill = Discipline)) +
  geom_col() +
  theme_minimal() +
  theme(
    legend.position = "bottom", 
    legend.box = "horizontal",
    legend.title = element_blank(),
    axis.text.x = element_blank(), 
    axis.ticks.x = element_blank()
  )

  # Combine the plots using patchwork
combined_plot <- (plot_spacer() + plot_layout(widths = c(38, 62))) / 
  whole_corpus_plot /
  vertical_plot + 
  plot_layout(heights = c(1, 0.3, 3))

# Display the combined plot
print(combined_plot)



# New plot 
p3+p1
















# New idea : Jitter and labels. 
full_merged_tb <- full_join(
  disciplines_BP_2003_2015 %>% select(discipline, percentage) %>% rename(percentage_BP = percentage),
  PNAS_tb %>% select(discipline, percentage) %>% rename(percentage_PNAS = percentage),
  by = "discipline"
) %>%
  # Replace NA with 0
  replace_na(list(percentage_BP = 0, percentage_PNAS = 0))

# View the merged tibble
ggplot(data = full_merged_tb, aes(x = percentage_BP, y = percentage_PNAS, color = discipline)) +
  geom_label_repel(aes(label = discipline), 
                   position = position_jitter(width = 1, height = 1, seed = 1),
                  size = 4, 
                  max.overlaps = 10, # Reduce label clutter
                  box.padding = 0.5, 
                  force = 10) +
  geom_point(position = position_jitter(width = 1, height = 1, seed = 1)) + # Add jitter to avoid overlap
  theme_minimal() + 
  geom_abline(intercept = 0, slope = 1, size = 0.5)+
  theme(legend.position = "none")



full_merged_tb <- full_merged_tb |> mutate(ratio = percentage_BP/percentage_PNAS)

ggplot(data = full_merged_tb, aes(x = percentage_BP, y = percentage_PNAS, color = discipline)) +
  geom_label_repel(aes(label = discipline), 
                   position = position_jitter(width = 1, height = 1, seed = 1),
                   size = 5, 
                   max.overlaps = 8, # Reduce label clutter
                   box.padding = 0.5, 
                   force = 20,) +
  geom_point(size = 4,position = position_jitter(width = 1, height = 1, seed = 1)) + # Add jitter to avoid overlap
  theme_minimal() + 
  geom_abline(intercept = 0, slope = 1, linetype = "dashed", color = "black") +
  ggplot2::scale_x_sqrt()+
  theme(legend.position = "none") 

```

```{r}
#| message: false
#| warning: false

library(readxl)
library(gender)
library(data.table)
library(dplyr)
library(ggplot2)
library(devtools)
library(remotes)
library(ggplot2)
library(plotly)
library(purrr)
library(tidyr)
library(htmlwidgets)
library(tidyverse)
library(kableExtra)

# LOADING DATA ------------------------------------------------------------
dir <- "C:/Users/jacob/OneDrive - Université Laval/Mon ordinateur portable/RSTUDIO/Data/"
pins_authors <- read_excel("C:/Users/jacob/OneDrive - Université Laval/Mon ordinateur portable/RSTUDIO/Data/PinS_Table.xlsx")

#Plotly configuration. 
Sys.setenv("plotly_username"="JacobHamelMottiez")
Sys.setenv("plotly_api_key"="baYnSFH6jD2mKbP1P62l")

# DATA MANIPULATION -------------------------------------------------------
pins_authors <- pins_authors %>% separate_longer_delim(Authors, delim = ";")
pins_authors_unique <- pins_authors |> arrange(Authors) |> unique() # N = 298

# SAVING 
#xlsx::write.xlsx(pins_authors_unique, "C:/Users/jacob/Dropbox/PC/Desktop/RSTUDIO/Data/PinS_Table_authors_unique.xlsx")

# MOST PRODUCTIVE Discipline PINS -----------------------------------------
PinS_Discipline_year <- read_excel(paste0(dir,"PinS_Discipline_year.xlsx"))
PinS_Discipline_year <- data.table(PinS_Discipline_year)
PinS_Discipline_year[, N := .N, by = Discipline]

# All Years
b <- ggplot(PinS_Discipline_year, aes(x = reorder(Discipline, N), color = Discipline, fill = Discipline)) + 
  geom_histogram(stat = "count")
bb <- hide_legend(ggplotly(b))
bb
# Plotly.
# api_create(bb, filename = "r-pins-histogram")


# Each Decades
PinS_Discipline_year[, N_year := .N, by = .(Discipline, Year)] # This is for each year.
time_window <- seq(1970, 2017, 10)


# Function for time window
for(i in 1:(length(time_window))){
  if(time_window[i] == 2010){
    PinS_Discipline_year[Year >= 2010, 
                start_window := 2010]}
  else{
    PinS_Discipline_year[Year >= time_window[i] & Year < time_window[i+1], 
                start_window := time_window[i]]
  }
}

PinS_Discipline_year[, N_window := .N, by =.(Discipline, start_window)] # This is for each decade. 
#unique(PinS_Discipline_year[, .(start_window,N_window), by = Discipline]) # The decades where there is 0 citation are missing.

# Missing values. 
# g <- ggplot(PinS_Discipline_year, aes(x = start_window, y = N_window, 
#                                       color = Discipline, fill = Discipline, group = Discipline)) + 
#   geom_point(size = 3) +
#   geom_smooth(method = "loess")
# ggplotly(g)


start_window <- seq(1970, 2017, 10)
PinS_Discipline_plus <- expand_grid(start_window, unique(PinS_Discipline_year$Discipline)) |> print(n=55)
PinS_Discipline_plus <- PinS_Discipline_plus |> arrange(`unique(PinS_Discipline_year$Discipline)`)
PinS_Discipline_plus <- rename(PinS_Discipline_plus, Discipline = `unique(PinS_Discipline_year$Discipline)`)
PinS_Discipline_year$N_year <- NULL
PinS_Discipline_year$Year <- NULL
PinS_Discipline_plus <- left_join(PinS_Discipline_plus,PinS_Discipline_year, by = c("Discipline", "start_window")) |> unique()
PinS_Discipline_plus <- PinS_Discipline_plus %>% replace(is.na(.), 0)
STEM <- c("Computers", "Engineering", "Logic", "Mathematics", "Physics", "Earth and Atmospheric Science")
health <- c("Biology", "Medicine", "Neuroscience", "Psychiatry")
STEM_disc <- PinS_Discipline_plus |> filter(Discipline %in% STEM) |> mutate(is_STEM = TRUE)
health_disc <- PinS_Discipline_plus |> filter(Discipline %in% health) |> mutate(is_STEM = FALSE)
PinS_Discipline_plus <- rbind(STEM_disc, health_disc)
PinS_Discipline_plus <- rename(PinS_Discipline_plus, Discipline = Discipline)

## ALL Discipline GGPLOT ---------------------------------------------------
A <- ggplot(PinS_Discipline_plus, aes(x = start_window, 
                                      y = N_window, 
                                      color = Discipline, 
                                      fill = Discipline, 
                                      group = Discipline)) + 
  geom_point(size = 2) +
  geom_smooth(linewidth = 1)

ggplotly(A)


## Health GGPLOT -----------------------------------------------------------
health_disc <- PinS_Discipline_plus |> filter(Discipline %in% health)
H <- ggplot(health_disc, aes(x = start_window, 
                             y = N_window, 
                             color = Discipline, 
                             fill = Discipline, 
                             group = Discipline)) + 
  geom_point(size = 2) +
  geom_smooth(linewidth = 1)

ggplotly(H)


## STEM GGPLOT -------------------------------------------------------------
STEM_disc <- PinS_Discipline_plus |> filter(Discipline %in% STEM)
S <- ggplot(STEM_disc, aes(x = start_window, 
                             y = N_window, 
                             color = Discipline, 
                             fill = Discipline, 
                             group = Discipline)) + 
  geom_point(size = 2) +
  geom_smooth(linewidth = 1)

ggplotly(S)



## FACET HEALTH VS STEM ----------------------------------------------------
A <- ggplot(PinS_Discipline_plus, aes(x = start_window, 
                                      y = N_window,
                                      color = Discipline)) + 
  geom_point(size = 2) +
  geom_smooth(linewidth = 1) +
  #theme_bw()+
  facet_wrap(facets = vars(is_STEM), labeller = labeller(is_STEM = c("FALSE" = "Health Disciplines", "TRUE" = "STEM Disciplines"))) +
  labs( color = "Disciplines", x = "Decade", y = "N. of Citations")
AA <- ggplotly(A)
AA

ggsave(file="PinS_pradeu.etal_2021.svg", plot=A, width=10, height=8)

getwd()
# For Plotly. 
# api_create(A, filename = "r-docs-midwest-boxplots2")

# WEIGHT TABLE ------------------------------------------------------------
# TABLE PERCENT -----------------------------------------------------------
PinS_percent_table <-  PinS_Discipline_year |> group_by(Discipline) |> count() 
PinS_percent_table <- PinS_percent_table |> arrange(-n) 
total <- sum(PinS_percent_table$n)
PinS_percent_table <- PinS_percent_table |> mutate(percent = (n/total)*100) |> select(Discipline, percent)
kable(PinS_percent_table)|> kable_minimal(c("hover"), full_width = F) 
```
